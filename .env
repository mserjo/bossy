# .env.dev
# # Конфігураційні змінні середовища для локального продуктивного-подібного середовища.
# # Цей файл НЕ ПОВИНЕН додаватися до системи контролю версій, якщо він містить чутливі дані.

# --- Налаштування бази даних (Локальний PostgreSQL) ---
POSTGRES_SERVER=localhost
POSTGRES_PORT=5432
POSTGRES_USER=odin # Замініть, якщо ваш користувач інший
POSTGRES_PASSWORD=112233 # Замініть, якщо ваш пароль інший
POSTGRES_DB=bossy # Замініть, якщо ваша БД називається інакше

# --- Налаштування SQLAlchemy ---
DB_DRIVER=postgresql+asyncpg
DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB}
ECHO_SQL=False # Змініть на True для відладки SQL запитів

# --- Налаштування FastAPI ---
DEBUG=True # True для локальної розробки
# SECRET_KEY тепер керується через AppSettings, і може бути встановлена як APP_SECRET_KEY або просто SECRET_KEY
# APP_SECRET_KEY=ваше_значення_тут_якщо_потрібно_перевизначити_дефолтне_в_settings
SECRET_KEY=d1f2b9a8c3e7d4f5a1b0c8d7e3f6a2b9d0c8f7e1a3b2c4d5e6f0a7b9c8d2e1f3 # Це значення буде використано, якщо APP_SECRET_KEY не задано і AppSettings.SECRET_KEY його прочитає
ALLOWED_HOSTS=["localhost","127.0.0.1"]

# --- Налаштування CORS ---
# Додайте URL вашого frontend, якщо він працює на іншому порту/домені
BACKEND_CORS_ORIGINS=["http://localhost:8000","http://127.0.0.1:8000","http://localhost:3000"]

# AUTH_SECRET_KEY використовується для AuthSettings (JWT тощо)
AUTH_SECRET_KEY=BwG52HdUptQhvMu12X614p6pcWL9UgAfOCYaTg2cjRQdXBexoKHqaX34BlnvbbCu6Gd6ej3FrU9yp9wqgtQfq2xbUoKfkIKXS7D96Y71fIYJKwgIcVo7nigwhYOSAABpOJZIwCJQqr7TqpV5hLLKVbteYS8KtuK660vyetSth5jdfmySb7BXf22hrjW3XtQqQSfBzpasp4C7jkpAtg8WO4bDZaGiyACOF4SRYGKQO6oIkxqUwzidsFOJOkb4fQ7k
# AUTH_SUPERUSER_PASSWORD використовується для AuthSettings
AUTH_SUPERUSER_PASSWORD=changeme

# --- Налаштування Redis (Локальний Redis) ---
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=112233
REDIS_DB=0

# --- Налаштування використання Redis та Celery ---
# Встановіть True або False для ввімкнення/вимкнення відповідних сервісів
# Ці значення будуть завантажені в settings.py
USE_REDIS=False
USE_CELERY=False

# --- Налаштування Celery (якщо використовується локально з Redis) ---
# Ці налаштування будуть використовуватися, якщо USE_CELERY=True
# CELERY_BROKER_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}
# CELERY_RESULT_BACKEND=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# --- Налаштування електронної пошти (SMTP, опціонально для локального тестування) ---
# SMTP_ENABLED=False
# SMTP_TLS=True
# SMTP_PORT=587
# SMTP_HOST=localhost # Можна використовувати локальний SMTP-сервер типу MailHog/Mailpit
# SMTP_USER=
# SMTP_PASSWORD=
# EMAILS_FROM_EMAIL=noreply@localhost
# EMAILS_FROM_NAME=Kudos (Local)

# --- Загальні налаштування додатку ---
API_V1_STR=/api/v1
PROJECT_NAME="Bossy Backend (Local Dev)"
PROJECT_VERSION="0.0.1"

# Шлях для завантажених файлів (якщо ваш додаток обробляє завантаження файлів)
# UPLOAD_DIRECTORY=/app/uploads # Для Docker. Локально може бути інший шлях, наприклад, ./uploads

# --- Налаштування логування ---
LOG_LEVEL=INFO # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT=TEXT # TEXT для читабельного формату, JSON для машинного аналізу

# --- Налаштування для створення першого суперкористувача (через скрипт) ---
# FIRST_SUPERUSER_EMAIL=admin@example.com
# FIRST_SUPERUSER_PASSWORD=your_strong_password_here
# FIRST_SUPERUSER_USERNAME=admin

# --- Налаштування Pydantic (версія 2) ---
# PYDANTIC_STRICT_MODE=True

# --- Python версія ---
PYTHON_VERSION=3.13
