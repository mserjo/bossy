# backend/app/src/api/graphql/types/__init__.py
# -*- coding: utf-8 -*-
"""
Ініціалізаційний файл для пакету 'types' GraphQL API.

Цей пакет призначений для визначення всіх GraphQL типів, що використовуються в схемі.
Це включає:
- Об'єктні типи (`ObjectType`): представляють ресурси системи (наприклад, UserType, GroupType, TaskType).
  Кожен такий тип зазвичай визначається у власному файлі (наприклад, `user.py`, `group.py`).
- Вхідні типи (`InputType`): використовуються для аргументів мутацій (наприклад, `UserCreateInput`).
- Перелічення (`EnumType`): для полів, що можуть приймати обмежений набір значень (наприклад, `UserRoleEnum`).
- Інтерфейси (`InterfaceType`): для визначення спільних полів між типами (наприклад, `Node` для Relay).
- Об'єднання (`UnionType`): для полів, що можуть повертати один з декількох типів.
- Скалярні типи (`ScalarType`): якщо потрібні кастомні скаляри, хоча вони частіше визначаються
  в окремому файлі `graphql/scalars.py` і імпортуються сюди або безпосередньо в схему.

Цей файл робить каталог 'types' пакетом Python. Він може також використовуватися
для агрегації та експорту всіх визначених типів для зручного імпорту в
`graphql/schema.py` або в файлах резолверів (`queries/`, `mutations/`).
Це допомагає уникнути циклічних залежностей та спрощує управління імпортами.
"""

# TODO: Імпортувати та експортувати GraphQL типи, коли вони будуть визначені
# у відповідних файлах цього пакету (наприклад, user.py, group.py, task.py тощо).
# Це робиться для того, щоб Strawberry або інша GraphQL бібліотека могла їх знайти
# під час компіляції схеми, або просто для зручності імпортів в інших частинах GraphQL API.

# Приклад експорту (для Strawberry):
# from .base import Node # Якщо є базовий інтерфейс/тип
# from .user import UserType, UserCreateInputType, UserRoleEnumType
# from .group import GroupType, GroupCreateInputType
# from .task import TaskType, TaskStatusEnumType
# # ... та інші типи з відповідних файлів ...
#
# __all__ = [
#     "Node",
#     "UserType",
#     "UserCreateInputType",
#     "UserRoleEnumType",
#     "GroupType",
#     "GroupCreateInputType",
#     "TaskType",
#     "TaskStatusEnumType",
#     # ... та інші експортовані типи ...
# ]

# На даний момент, поки конкретні типи не визначені у відповідних файлах,
# цей файл може залишатися таким. Головне, щоб він існував для позначення пакету
# і був готовий до додавання імпортів та експортів.
pass
