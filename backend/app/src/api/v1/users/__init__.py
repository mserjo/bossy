# backend/app/src/api/v1/users/__init__.py
# -*- coding: utf-8 -*-
"""
Ініціалізаційний файл для пакету 'users' API v1.

Цей пакет містить ендпоінти для адміністративного управління користувачами
в системі через API v1. Ці операції зазвичай доступні тільки
для користувачів з роллю супер-адміністратора або адміністратора системи.

Можливі операції:
- Перегляд списку всіх користувачів системи.
- Створення нового користувача (адміністратором).
- Перегляд детальної інформації про конкретного користувача.
- Редагування даних користувача (наприклад, зміна ролі, блокування).
- Видалення користувача з системи.

Ендпоінти, пов'язані з управлінням власним профілем користувача
(наприклад, `/me`), знаходяться в пакеті `auth` (зазвичай `profile.py`).

Цей файл робить каталог 'users' пакетом Python та експортує роутер
для ендпоінтів адміністративного управління користувачами API v1.
Очікується, що основний роутер для цих операцій буде визначений у файлі `users.py`
всередині цього пакету.
"""

from fastapi import APIRouter

# TODO: Імпортувати роутер для ендпоінтів управління користувачами,
# коли він буде створений у файлі `users.py` в цьому ж каталозі.
# from backend.app.src.api.v1.users.users import router as users_module_router

# Роутер для ендпоінтів адміністративного управління користувачами API v1.
router = APIRouter(tags=["v1 :: Users (Admin)"])

# TODO: Розкоментувати підключення роутера, коли `users_module_router` буде готовий.
# router.include_router(users_module_router)
# Якщо `users_module_router` вже обробляє шляхи відносно `/users` (наприклад, `/users/{id}`),
# то додатковий префікс тут не потрібен. Префікс `/users` буде доданий
# при підключенні цього `router` в `backend.app.src.api.v1.router.py`.

# Експорт роутера.
__all__ = [
    "router",
]

# TODO: Узгодити назву експортованого роутера ("router") з імпортом
# в `backend.app.src.api.v1.router.py` (там очікується `users_v1_router`).
