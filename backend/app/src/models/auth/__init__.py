# backend/app/src/models/auth/__init__.py
# -*- coding: utf-8 -*-
"""
Ініціалізаційний файл для пакету моделей автентифікації та користувачів (`auth`).

Цей файл робить доступними основні моделі, пов'язані з автентифікацією та користувачами,
для імпорту з пакету `backend.app.src.models.auth`.
Це спрощує імпорти в інших частинах проекту.

Приклад імпорту:
from backend.app.src.models.auth import UserModel, RefreshTokenModel, SessionModel

Також цей файл може використовуватися для визначення змінної `__all__`,
яка контролює, що саме експортується при використанні `from . import *`.
"""

# Імпорт конкретних моделей автентифікації та користувачів
from backend.app.src.models.auth.user import UserModel
from backend.app.src.models.auth.token import RefreshTokenModel
from backend.app.src.models.auth.session import SessionModel

# Визначення змінної `__all__` для контролю публічного API пакету.
# Це список рядків, що містять імена атрибутів (моделей, функцій, змінних),
# які будуть імпортовані, коли використовується `from backend.app.src.models.auth import *`.
# Рекомендується явно визначати `__all__` для кращої читабельності та контролю.
__all__ = [
    "UserModel",
    "RefreshTokenModel",
    "SessionModel",
]

# TODO: Переконатися, що всі необхідні моделі з цього пакету створені та включені до `__all__`.
# На даний момент включені всі моделі, заплановані для створення в цьому пакеті.

# TODO: Додати коментар про важливість цього `__init__.py` для структури проекту
# та потенційної взаємодії з інструментами, такими як Alembic, хоча Alembic
# зазвичай орієнтується на `Base.metadata` з `models.base`.
# Цей файл забезпечує чистий та організований спосіб доступу до моделей
# автентифікації та користувачів.
# Також, при визначенні зв'язків (relationships) між моделями з різних пакетів,
# використання таких `__init__.py` файлів може спростити імпорти,
# роблячи їх менш залежними від точної структури підкаталогів,
# якщо імпортувати через `from backend.app.src.models import SomeModelFromAnotherPackage`.
# Однак, пряміші імпорти, як `from backend.app.src.models.another_package import SpecificModel`
# є більш явними.
# Для визначення relationship в SQLAlchemy часто використовуються рядкові представлення імен моделей,
# наприклад, `relationship("UserModel", ...)`, і SQLAlchemy сама знаходить їх через `Base.metadata`.
# Тому прямий імпорт моделей в `__init__.py` більше для зручності розробника при використанні цих моделей в коді.
