# backend/app/src/repositories/__init__.py
# -*- coding: utf-8 -*-
"""
Пакет репозиторіїв (`repositories`).

Цей пакет містить класи репозиторіїв, які відповідають за взаємодію
з базою даних для різних моделей (сутностей) системи.
Репозиторії абстрагують логіку доступу до даних (CRUD операції та специфічні запити)
від сервісного шару.

Кожен підпакет (наприклад, `auth`, `groups`, `tasks`) містить репозиторії,
що стосуються відповідних сутностей.

Основні компоненти:
- `base.py`: Містить базовий клас `BaseRepository` з загальними CRUD-методами.
- Специфічні репозиторії (наприклад, `UserRepository`, `TaskRepository`), які успадковують
  `BaseRepository` та реалізують методи для конкретних моделей.

Принципи:
- Репозиторії працюють з моделями SQLAlchemy та Pydantic схемами.
- Методи репозиторіїв є асинхронними.
- Репозиторії отримують сесію бази даних (`AsyncSession`) через залежності або
  безпосередньо при ініціалізації (якщо це зручно для структури).
"""

# Імпорт базового репозиторію, щоб він був доступний при імпорті пакета,
# якщо це буде зручно для використання.
from .base import BaseRepository

# TODO: Можна додати експорт конкретних репозиторіїв сюди,
# якщо потрібно мати до них доступ через `from backend.app.src.repositories import UserRepository`.
# Наприклад:
# from .auth.user_repository import UserRepository # Приклад, коли файл буде створено
# from .groups.group_repository import GroupRepository # Приклад

# __all__ визначає, які імена експортуються, коли виконується `from . import *`
# (хоча такий імпорт зазвичай не рекомендується).
# Якщо експортувати конкретні репозиторії, їх слід додати сюди.
__all__ = [
    "BaseRepository",
    # "UserRepository", # Приклад
    # "GroupRepository", # Приклад
]

# Логування ініціалізації пакета (опціонально)
from backend.app.src.config.logging import logger
logger.debug("Пакет 'repositories' ініціалізовано.")

# TODO: Переконатися, що всі необхідні репозиторії будуть створені
# та, за потреби, експортовані тут або в `__init__.py` відповідних підпакетів.
# TODO: Забезпечити правильну структуру підпакетів (`auth`, `groups` тощо)
# всередині `repositories/` відповідно до `structure-claude-v3.md`.
